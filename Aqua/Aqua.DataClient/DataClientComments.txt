Infragistics.Guidance.Aqua.DataClient



------------------------------Commands------------------------------
The commands folder contains a bunch of command classes which correspond to the different types of data that have to be retrieved.  There are separate commands for changing the SelectedPatient, Getting the Admittances, Logging into Live, Getting the Azure Library Items, Getting the Chat Responses, and getting the Medications.  Each of these command classes are implemented slightly different depending ont the type of data that needs to be returned.  Each command creates a specific repository which carries out what query needs to be sent to the service.  


------------------------------Data------------------------------
There is a repository for each object that must be returned from the Ado.Net DataServices.  This repository contains the actual query that will be used to fetch the data from the service.  You will notice each repository class implements the query slightly different depending on what type of data needs to be returned.  



------------------------------Mappers------------------------------
The mappers folder contains all the Class mappers to map the auto generated ADO.Net DataService proxy objects to the Model objects.  It basically takes the properties from the proxy object and sets them to the model objects.  We used a separate model classes instead of the autogenerated classes for two reasons.
1).  We wanted to keep the model separate from any datasource or database.  Keeping the Model separate like this will allow us to connect to any datasource with the correct information and with a little modification in the service calls, have the project work as planned. 

2).  We did not want to put any behavior inside of the generated classes.  In the future, if we need to make the aqua project CRUD capable, it will not be a good idea to put behavior to support that in the generated model classes. 

